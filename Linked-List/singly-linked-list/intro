A linked list is a linear dynamic data structure to store data items.
The linked list does not store data items in contiguous memory locations.
A linked list consists of items called “Nodes” which contain two parts. The first part stores the actual data and the second part has a pointer that points to the next node.


Uses of Linked List

->The list is not required to be contiguously present in the memory. The node can reside any where in the memory and linked together to make a list. This achieves optimized utilization of space.
->list size is limited to the memory size and doesn't need to be declared in advance.
->Empty node can not be present in the linked list.
->We can store values of primitive types or objects in the singly linked list.


Why use linked List when we have array-
Array contains following limitations:

    ->The size of array must be known in advance before using it in the program.
    ->Increasing size of the array is a time taking process. It is almost impossible to expand the size of the array at run time.
    ->All the elements in the array need to be contiguously stored in the memory. Inserting any element in the array needs shifting of all its predecessors.

Linked list is the data structure which can overcome all the limitations of an array. Using linked list is useful because,

    ->It allocates the memory dynamically. All the nodes of linked list are non-contiguously stored in the memory and linked together with the help of pointers.
    ->Sizing is no longer a problem since we do not need to define its size at the time of declaration. List grows as per the program's demand and limited to the available memory space.
